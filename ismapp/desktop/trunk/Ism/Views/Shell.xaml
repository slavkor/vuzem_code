<Window x:Class="Ism.Views.Shell"
                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:local="clr-namespace:Ism.Views"
                       xmlns:prism="http://prismlibrary.com/"
                       xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                       xmlns:ctrl="clr-namespace:Ism.Controls;assembly=Ism.Controls"
                       xmlns:inf="clr-namespace:Ism.Infrastructure;assembly=Ism.Infrastructure"
                       xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                       mc:Ignorable="d"
                       Title="{Binding WindowTitle}" WindowState="Maximized"
                       prism:ViewModelLocator.AutoWireViewModel="True" Style="{StaticResource CustomWindowStyle}">
    <Window.Resources>
        <Style TargetType="{x:Type Window}" x:Key="CustomWindowStyleError" BasedOn="{StaticResource CustomWindowStyle}">
            <Setter Property="BorderBrush" Value="Salmon" />
        </Style>
        <Style TargetType="{x:Type Window}" x:Key="CustomWindowStyleGreen" BasedOn="{StaticResource CustomWindowStyle}">
            <Setter Property="BorderBrush" Value="DarkSeaGreen" />
        </Style>        
        <Style TargetType="{x:Type Window}" x:Key="CustomPopupStyle" BasedOn="{StaticResource ResourceKey=CustomWindowStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Grid>
                            <Border Padding ="5"  Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,1" >
                                <AdornerDecorator>
                                    <ContentPresenter />
                                </AdornerDecorator>
                                <!--<Border.InputBindings>
                                    <KeyBinding Key="Escape" Command="{Binding Path=CloseCommandByEscape}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"></KeyBinding>
                                </Border.InputBindings>-->
                            </Border>

                            <DockPanel Height="30"
                                       VerticalAlignment="Top"
                                       LastChildFill="False" Visibility="Hidden">

                                <TextBlock Margin="5,0,0,0"
                                           VerticalAlignment="Center"
                                           DockPanel.Dock="Left"
                                           FontSize="16"
                                           Foreground="White"
                                           Text="{TemplateBinding Title}" />

                                <StackPanel x:Name="MainStack" Orientation="Horizontal" Margin="5"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Top" DockPanel.Dock="Right">
                                    <Button Content="0" Style="{DynamicResource InheritedStyle}"
                                            Command="{Binding Path=MinimizeCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                    <Button Content="1" Style="{DynamicResource InheritedStyle}"
                                            Command="{Binding Path=MaximizeCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                    <Button Content="2" Style="{DynamicResource InheritedStyle}"
                                            Command="{Binding Path=RestoreCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                    <Button Content="r" Style="{DynamicResource InheritedStyle}"
                                            Command="{Binding Path=CloseCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                </StackPanel>
                            </DockPanel>

                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <BooleanToVisibilityConverter x:Key="BoolToVis"></BooleanToVisibilityConverter>
    </Window.Resources>

    <telerik:RadBusyIndicator x:Name="BusyIndicator" IsBusy="{Binding IsBusy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
        <Grid>
            <i:Interaction.Triggers>
                <prism:InteractionRequestTrigger SourceObject="{Binding AppBusyRequest, Mode=OneWay}">
                    <prism:PopupWindowAction IsModal="True" WindowStartupLocation="CenterOwner" WindowStyle="{StaticResource CustomPopupStyle}" >
                        <prism:PopupWindowAction.WindowContent>
                            <local:BusyIndicator />
                        </prism:PopupWindowAction.WindowContent>
                    </prism:PopupWindowAction>
                </prism:InteractionRequestTrigger>

                <prism:InteractionRequestTrigger SourceObject="{Binding ExceptionRequest, Mode=OneWay}">
                    <prism:PopupWindowAction IsModal="True" WindowStartupLocation="CenterOwner" WindowStyle="{StaticResource CustomWindowStyleError}" >
                        <prism:PopupWindowAction.WindowContent>
                            <local:ExceptionView />
                        </prism:PopupWindowAction.WindowContent>
                    </prism:PopupWindowAction>
                </prism:InteractionRequestTrigger>

                <prism:InteractionRequestTrigger SourceObject="{Binding ConfirmSaveRequest, Mode=OneWay}">
                    <prism:PopupWindowAction IsModal="True" WindowStartupLocation="CenterOwner" WindowStyle="{StaticResource CustomWindowStyleGreen}" >
                        <prism:PopupWindowAction.WindowContent>
                            <local:ConfirmSaveView />
                        </prism:PopupWindowAction.WindowContent>
                    </prism:PopupWindowAction>
                </prism:InteractionRequestTrigger>
            </i:Interaction.Triggers>


            <!--<Grid.ContextMenu>
            <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                <MenuItem Header="Delete" Command="{Binding Path=DeleteRecord}"/>
            </ContextMenu>
        </Grid.ContextMenu>-->

            <!--<AdornerDecorator Visibility="{Binding AdornerVisible, Converter={StaticResource ResourceKey=BoolToVis}}">
            <Border Background="LightGray" Opacity="0.5"></Border>
        </AdornerDecorator>-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="50"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <ContentControl Grid.Column="0" Grid.Row="0" prism:RegionManager.RegionName="{x:Static inf:RegionNames.CompanyLogoRegion}"/>

            <ItemsControl Margin="1" 
                      x:Name="SysNavigationRegion"
                      Grid.Column="1" 
                      Grid.Row="0" 
                      Grid.ColumnSpan="3" 
                      prism:RegionManager.RegionName="{x:Static inf:RegionNames.SysNavRegion}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <DockPanel LastChildFill="False" Dock="Right" HorizontalAlignment="Right">
                        </DockPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>

            <ItemsControl Margin="1" 
                      x:Name="NavigationRegion"
                      Grid.Column="0" 
                      Grid.Row="1" 
                      Grid.ColumnSpan="4" 
                      prism:RegionManager.RegionName="{x:Static inf:RegionNames.NavigaionRegion}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>

            <ContentControl Grid.Column="0" 
                        Grid.Row="2"
                        Grid.ColumnSpan="4"
                        Grid.RowSpan="1" 
                        Background="Azure"
                        x:Name="MainRegion"
                        prism:RegionManager.RegionName="{x:Static inf:RegionNames.MainContentRegion}"
                        VerticalContentAlignment="Stretch"
                        HorizontalContentAlignment="Stretch" />

            <Border BorderBrush="Black" BorderThickness="1" Background="#80000000"  Visibility="{Binding AdornerVisible, Converter={StaticResource ResourceKey=BoolToVis}, FallbackValue=Collapsed}" Grid.RowSpan="3">

                <Grid>

                    <TextBlock Margin="0" TextWrapping="Wrap" Text="Please Wait..." HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24" FontWeight="Bold" Foreground="#7EFFFFFF"/>

                </Grid>

            </Border>
        </Grid>
    </telerik:RadBusyIndicator>
</Window>