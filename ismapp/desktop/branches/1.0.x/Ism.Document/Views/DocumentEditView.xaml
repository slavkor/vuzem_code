<UserControl x:Class="Ism.Document.Views.DocumentEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converter="clr-namespace:Ism.Infrastructure.Converters;assembly=Ism.Infrastructure"
             xmlns:local="clr-namespace:Ism.Document.Views"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:controls="clr-namespace:Ism.Controls;assembly=Ism.Controls"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:model="clr-namespace:Ism.Infrastructure.Model;assembly=Ism.Infrastructure"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             prism:ViewModelLocator.AutoWireViewModel="True"                
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Ism.Infrastructure;component/Resources/WindowStyle.xaml"></ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/Ism.Infrastructure;component/Resources/BaseButtonStyle.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="BoolToVis"></BooleanToVisibilityConverter>
            <converter:DayModelToDateTimeConverter x:Key="DayToDateTime"></converter:DayModelToDateTimeConverter>
            <Style x:Key="styleCalendar" TargetType="{x:Type Calendar}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Calendar}">
                            <!-- Wrapping in ViewBox will enlarge calendar of that size.-->
                            <Viewbox Height="400"
                         Width="400">
                                <CalendarItem x:Name="PART_CalendarItem"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"/>
                            </Viewbox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <converter:SecurityScopeToVisibilityConverter x:Key="SecurityToVisbility"></converter:SecurityScopeToVisibilityConverter>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <i:Interaction.Triggers>
            <prism:InteractionRequestTrigger SourceObject="{Binding FileAddInteractionRequest, Mode=OneWay}" >
                <prism:PopupWindowAction IsModal="True" WindowStartupLocation="CenterOwner"  WindowStyle="{StaticResource ResourceKey=CustomWindowStyle}">
                    <prism:PopupWindowAction.WindowContent>
                        <local:FileAddView />
                    </prism:PopupWindowAction.WindowContent>
                </prism:PopupWindowAction>
            </prism:InteractionRequestTrigger>
        </i:Interaction.Triggers>       
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition  Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="lbl" Width="Auto"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Label Grid.Column="0" Grid.Row="0">Tip dokuemnta</Label>
                    <Label Grid.Column="0" Grid.Row="1">Dokument</Label>
                    <Label Grid.Column="0" Grid.Row="2">Opis</Label>
                    <Label Grid.Column="0" Grid.Row="3">Datum dokumenta</Label>
                    <Label Grid.Column="0" Grid.Row="4" Visibility="{Binding SelectedDocumentType.Numbered , Converter={StaticResource BoolToVis}}">Številka dokumenta</Label>
                    <Label Grid.Column="0" Grid.Row="5" Visibility="{Binding SelectedDocumentType.Expirable , Converter={StaticResource BoolToVis}}" >Velja od</Label>
                    <Label Grid.Column="0" Grid.Row="6" Visibility="{Binding SelectedDocumentType.Expirable , Converter={StaticResource BoolToVis}}" >Velja do</Label>

                    <ComboBox Grid.Column="1" Grid.Row="0" ItemsSource="{Binding DocumentTypes, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" SelectedItem="{Binding SelectedDocumentType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" DisplayMemberPath="Name" IsSynchronizedWithCurrentItem="True" IsEnabled="{Binding DocumentTypeEnabled, UpdateSourceTrigger=PropertyChanged}"></ComboBox>
                    <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Document.Name, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding Document.Description, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    <controls:CustomDatePicker Grid.Column="1" Grid.Row="3" Focusable="True" SelectedDate="{Binding Path=Document.DocDate, Mode=TwoWay, Converter={StaticResource DayToDateTime}, UpdateSourceTrigger=PropertyChanged, TargetNullValue={x:Static model:Day.Now}}"></controls:CustomDatePicker>

                    <TextBox Grid.Column="1" Grid.Row="4" Text="{Binding Document.DocumentNumber,UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding SelectedDocumentType.Numbered , Converter={StaticResource BoolToVis}}"></TextBox>
                    <controls:CustomDatePicker   Grid.Column="1" Grid.Row="5" Focusable="True" SelectedDate="{Binding Path=Document.ValidFrom, Mode=TwoWay, Converter={StaticResource DayToDateTime}, UpdateSourceTrigger=PropertyChanged, TargetNullValue={x:Static System:DateTime.Now}}" VerticalAlignment="Stretch" Visibility="{Binding SelectedDocumentType.Expirable , Converter={StaticResource BoolToVis}}" ></controls:CustomDatePicker>
                    <StackPanel Grid.Column="1" Grid.Row="6"  Orientation="Horizontal">
                        <CheckBox Name="CheckBox" VerticalAlignment="Center" IsChecked="{Binding HasValidTo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding SelectedDocumentType.Expirable , Converter={StaticResource BoolToVis}}" ></CheckBox>
                        <controls:CustomDatePicker Focusable="True" IsEnabled="{Binding ElementName=CheckBox, Path=IsChecked}" SelectedDate="{Binding Path=Document.ValidTo, Mode=TwoWay, Converter={StaticResource DayToDateTime}, UpdateSourceTrigger=PropertyChanged, TargetNullValue={x:Static System:DateTime.Now}}" VerticalAlignment="Stretch" Visibility="{Binding SelectedDocumentType.Expirable , Converter={StaticResource BoolToVis}}" ></controls:CustomDatePicker>
                    </StackPanel>
                </Grid>
              
                <Grid Grid.Row="1">
                    <!--<Grid.Resources>
                        <xcdg:DataGridCollectionViewSource x:Key="FileSource" Source="{Binding Files}" />
                    </Grid.Resources>-->

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal">
                        <Button Command="{Binding SelectFilesCommand}" Visibility="{Binding Source={x:Null}, Converter={StaticResource ResourceKey=SecurityToVisbility}, ConverterParameter=document.file.add, Mode=OneWay}">Dodaj datoteke</Button>
                        <Button Command="{Binding DeleteFileCommand}" Visibility="{Binding Source={x:Null}, Converter={StaticResource ResourceKey=SecurityToVisbility}, ConverterParameter=document.file.delete, Mode=OneWay}">Odstrani datoteko</Button>
                        <Button Command="{Binding OpenFileCommand}" Visibility="{Binding Source={x:Null}, Converter={StaticResource ResourceKey=SecurityToVisbility}, ConverterParameter=document.file.open, Mode=OneWay}">Odpri datoteko</Button>
                        <Button Command="{Binding ExtendDocumentCommand}" Visibility="{Binding Source={x:Null}, Converter={StaticResource ResourceKey=SecurityToVisbility}, ConverterParameter=document.file.extend, Mode=OneWay}">Podaljšaj</Button>
                        <Button Command="{Binding CancelDocumentCommand}" Visibility="{Binding Source={x:Null}, Converter={StaticResource ResourceKey=SecurityToVisbility}, ConverterParameter=document.file.cancel, Mode=OneWay}">Prekliči</Button>
                    </StackPanel>
                    <telerik:RadGridView Grid.Row="1" ItemsSource="{Binding Files}" AutoGenerateColumns="False" FilteringMode="FilterRow" x:Name="list" SelectedItem="{Binding SelectedFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ShowGroupPanel="False">
                        <telerik:RadGridView.Columns>
                            <telerik:GridViewDataColumn Header="Datoteka"  DataMemberBinding="{Binding Name}" IsReadOnly="True" ></telerik:GridViewDataColumn>
                            <telerik:GridViewDataColumn Header="Jezik" DataMemberBinding="{Binding Language.Lang}" IsReadOnly="True" ></telerik:GridViewDataColumn>
                        </telerik:RadGridView.Columns>
                        <telerik:EventToCommandBehavior.EventBindings>
                            <telerik:EventBinding  Command="{Binding DocumentCommandEdit}" EventName="MouseDoubleClick" CommandParameter="{Binding ElementName=list, Path=SelectedItem}" RaiseOnHandledEvents="True"/>
                        </telerik:EventToCommandBehavior.EventBindings>
                    </telerik:RadGridView>
                    
                    <!--<xcdg:DataGridControl Grid.Row="1" ItemsSource="{Binding Source={StaticResource FileSource}}" AutoCreateColumns="False" SelectedItem="{Binding SelectedFile}" BorderThickness="0" ReadOnly="True" AllowDrag="True">
                        <xcdg:DataGridControl.View>
                            <xcdg:TableflowView UseDefaultHeadersFooters="False">
                                <xcdg:TableflowView.FixedHeaders>
                                    <DataTemplate>
                                        <xcdg:ColumnManagerRow />
                                    </DataTemplate>
                                </xcdg:TableflowView.FixedHeaders>
                            </xcdg:TableflowView>
                        </xcdg:DataGridControl.View>
                        <xcdg:DataGridControl.Columns>
                            <xcdg:Column FieldName="Name" Title="Datoteka" />
                            <xcdg:Column FieldName="Language.Lang" Title="Jezik" />
                        </xcdg:DataGridControl.Columns>
                    </xcdg:DataGridControl>-->

                </Grid>
            </Grid>
        </Grid>
        <DockPanel Grid.Row="1"  Grid.Column="0" LastChildFill="False">
            <Button DockPanel.Dock="Left" Content="Prekliči" Command="{Binding CancelCommand}" ></Button>
            <Button DockPanel.Dock="Right" Content="Shrani" Command="{Binding SaveCommand}"></Button>
        </DockPanel>        
    </Grid>
</UserControl>







